{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "CVE: CVE-2022-36879\nyaml_instructions: |\n  =================\n  ===YAML Primer===\n  =================\n  This is a dictionary data structure, akin to JSON.\n  Everything before a colon is a key, and the values here are usually strings\n  For one-line strings, you can just use quotes after the colon\n  For multi-line strings, as we do for our instructions, you put a | and then\n  indent by two spaces\n\n  For readability, we hard-wrap multi-line strings at 80 characters. This is\n  not required, but appreciated.\ncurated_instructions: |\n  If you are manually editing this file, then you are \"curating\" it.\n\n  Set the version number that you were given in your instructions.\n\n  This will enable additional editorial checks on this file to make sure you\n  fill everything out properly. If you are a student, we cannot accept your work\n  as finished unless curated is properly updated.\ncuration_level: 2\nreported_instructions: |\n  What date was the vulnerability reported to the security team? Look at the\n  security bulletins and bug reports. It is not necessarily the same day that\n  the CVE was created.  Leave blank if no date is given.\n\n  Please enter your date in YYYY-MM-DD format.\nreported_date:\nannounced_instructions: |\n  Was there a date that this vulnerability was announced to the world? You can\n  find this in changelogs, blogs, bug reports, or perhaps the CVE date.\n\n  This is not the same as published date in the NVD - that is below.\n\n  Please enter your date in YYYY-MM-DD format.\nannounced_date: '2022-07-27'\npublished_instructions: |\n  Is there a published fix or patch date for this vulnerability?\n  Please enter your date in YYYY-MM-DD format.\npublished_date: '2022-07-27'\ndescription_instructions: |\n  You can get an initial description from the CVE entry on cve.mitre.org. These\n  descriptions are a fine start, but they can be kind of jargony.\n\n  Rewrite this description IN YOUR OWN WORDS. Make it interesting and easy to\n  read to anyone with some programming experience. We can always pull up the NVD\n  description later to get more technical.\n\n  Try to still be specific in your description, but remove project-specific\n  stuff. Remove references to versions, specific filenames, and other jargon\n  that outsiders to this project would not understand. Technology like \"regular\n  expressions\" is fine, and security phrases like \"invalid write\" are fine to\n  keep too.\n\n  Your target audience is people just like you before you took any course in\n  security\ndescription: Within the linux kernal, a vulnerability within one of the files allowed for  \nbounty_instructions: |\n  If you came across any indications that a bounty was paid out for this\n  vulnerability, fill it out here. Or correct it if the information already here\n  was wrong. Otherwise, leave it blank.\nbounty:\n  amt:\n  announced:\n  url:\nreviews: []\nbugs_instructions: |\n  What bugs are involved in this vulnerability?\n\n  Please list bug IDs to https://bugzilla.kernel.org/\n\n  Bug ID's can appear in several places:\n    * Mentioned in commit messages\n    * Mentioned in mailing list discussions\n    * References from NVD entry\n    * Various other places\nbugs: []\nfixes_instructions: |\n  Please put the commit hash in \"commit\" below.\n\n  This must be a git commit hash from the systemd source repo, a  40-character\n  hexademical string/\n\n  Place any notes you would like to make in the notes field.\nfixes:\n- commit:\n  note:\n- commit:\n  note:\n- commit: f85daf0e725358be78dfd208dea5fd665d8cb901\n  note: |\n    Taken from NVD references list with Git commit. If you are\n    curating, please fact-check that this commit fixes the vulnerability and replace this comment with 'Manually confirmed'\nvcc_instructions: |\n  The vulnerability-contributing commits.\n\n  These are found by our tools by traversing the Git Blame history, where we\n  determine which commit(s) introduced the functionality.\n\n  Look up these VCC commits and verify that they are not simple refactorings,\n  and that they are, in fact introducing the vulnerability into the system.\n  Often, introducing the file or function is where the VCC is, but VCCs can be\n  anything.\n\n  Place any notes you would like to make in the notes field.\nvccs:\n- commit: 80c802f3073e84c956846e921e8a0b02dfa3755f\n  note: Discovered automatically by archeogit.\n- commit: 4e81bb8336a0ac50289d4d4c7a55e559b994ee8f\n  note: Discovered automatically by archeogit.\nupvotes_instructions: |\n  For the first round, ignore this upvotes number.\n\n  For the second round of reviewing, you will be giving a certain amount of\n  upvotes to each vulnerability you see. Your peers will tell you how\n  interesting they think this vulnerability is, and you'll add that to the\n  upvotes score on your branch.\nupvotes:\nunit_tested:\n  question: |\n    Were automated unit tests involved in this vulnerability?\n    Was the original code unit tested, or not unit tested? Did the fix involve\n    improving the automated tests?\n\n    For code: and fix: - your answer should be boolean.\n\n    For the code_answer below, look not only at the fix but the surrounding\n    code near the fix in related directories and determine if and was there were\n    unit tests involved for this subsystem.\n\n    For the fix_answer below, check if the fix for the vulnerability involves\n    adding or improving an automated test to ensure this doesn't happen again.\n  code:\n  code_answer:\n  fix:\n  fix_answer:\ndiscovered:\n  question: |\n    How was this vulnerability discovered?\n\n    Go to the bug report and read the conversation to find out how this was\n    originally found. Answer in longform below in \"answer\", fill in the date in\n    YYYY-MM-DD, and then determine if the vulnerability was found by a Google\n    employee (you can tell from their email address). If it's clear that the\n    vulenrability was discovered by a contest, fill in the name there.\n\n    The automated, contest, and developer flags can be true, false, or nil.\n\n    If there is no evidence as to how this vulnerability was found, then please\n    explain where you looked.\n  answer:\n  automated:\n  contest:\n  developer:\nautodiscoverable:\n  instructions: |\n    Is it plausible that a fully automated tool could have discovered\n    this? These are tools that require little knowledge of the domain,\n     e.g. automatic static analysis, compiler warnings, fuzzers.\n\n    Examples for true answers: SQL injection, XSS, buffer overflow\n\n    In systemd, the actually use OZZ Fuzz. If there's a link to it, add it here.\n\n    Examples for false: RFC violations, permissions issues, anything\n    that requires the tool to be \"aware\" of the project's\n    domain-specific requirements.\n\n    The answer field should be boolean. In answer_note, please explain\n    why you come to that conclusion.\n  note:\n  answer:\nspecification:\n  instructions: |\n    Is there mention of a violation of a specification? For example, the POSIX\n    spec, an RFC spec, a network protocol spec, or some other requirements\n    specification.\n\n    Be sure to check the following artifacts for this:\n      * bug reports\n      * security advisories\n      * commit message\n      * mailing lists\n      * anything else\n\n    The answer field should be boolean. In answer_note, please explain\n    why you come to that conclusion.\n  note:\n  answer:\nsubsystem:\n  question: |\n    What subsystems was the mistake in? These are WITHIN linux kernel\n\n    Determining the subsystem is a subjective task. This is to help us group\n     similar vulnerabilities, so choose a subsystem that other vulnerabilities would be in. Y\n\n    Some areas to look for pertinent information:\n      - Bug labels\n      - Directory names\n      - How developers refer to an area of the system in comments,\n        commit messages, etc.\n\n    Look at the path of the source code files code that were fixed to get\n    directory names. Look at comments in the code. Look at the bug reports how\n    the bug report was tagged.\n\n    Example linux kernel subsystems are:\n      * drivers\n      * crypto\n      * fs\n      * net\n      * lib\n\n    Name should be:\n      * all lowercase English letters\n      * NOT a specific file\n      * can have digits, and _-@/\n\n    Can be multiple subsystems involved, in which case you can make it an array\n    e.g.\n        name: [\"subsystemA\", \"subsystemB\"] # ok\n        name: subsystemA # also ok\n  name:\n  note:\ninteresting_commits:\n  question: |\n    Are there any interesting commits between your VCC(s) and fix(es)?\n\n    Use this to specify any commits you think are notable in some way, and\n    explain why in the note.\n\n    Example interesting commits:\n      * Mentioned as a problematic commit in the past\n        e.g. \"This fixes regression in commit xys\"\n      * A significant rewrite in the git history\n      * Other commits that fixed a similar issue as this vulnerability\n      * Anything else you find interesting.\n  commits:\n  - commit:\n    note:\n  - commit:\n    note:\ni18n:\n  question: |\n    Was the feature impacted by this vulnerability about internationalization\n    (i18n)?\n\n    An internationalization feature is one that enables people from all\n    over the world to use the system. This includes translations, locales,\n    typography, unicode, or various other features.\n\n    Answer should be true or false\n    Write a note about how you came to the conclusions you did, regardless of\n    what your answer was.\n  answer:\n  note:\nsandbox:\n  question: |\n    Did this vulnerability violate a sandboxing feature that the system\n    provides?\n\n    A sandboxing feature is one that allows files, users, or other features\n    limited access. Vulnerabilities that violate sandboxes are usually based on\n    access control, checking privileges incorrectly, path traversal, and the\n    like.\n\n    Answer should be true or false\n    Write a note about how you came to the conclusions you did, regardless of\n    what your answer was.\n  answer:\n  note:\nipc:\n  question: |\n    Did the feature that this vulnerability affected use inter-process\n    communication? IPC includes OS signals, pipes, stdin/stdout, message\n    passing, and clipboard. Writing to files that another program in this\n    software system reads is another form of IPC.\n\n    Answer must be true or false.\n    Write a note about how you came to the conclusions you did, regardless of\n    what your answer was.\n  answer:\n  note:\ndiscussion:\n  question: |\n    Was there any discussion surrounding this?\n\n    A discussion can include debates, disputes, or polite talk about how to\n    resolve uncertainty.\n\n    Example include:\n      * Is this out of our scope?\n      * Is this a security?\n      * How should we fix this?\n\n    Just because you see multiple comments doesn't mean it's a discussion.\n    For example:\n      * \"Fix line 10\". \"Ok\" is not what we call a discussion\n      * \"Ping\" (reminding people)\n\n    Check the bugs reports, pull requests, and mailing lists archives.\n\n    These answers should be boolean.\n      discussed_as_security: true or false\n      any_discussion: true or false\n\n    Put any links to disagreements you found in the notes section, or any other\n    comment you want to make.\n  discussed_as_security:\n  any_discussion:\n  note:\nvouch:\n  question: |\n    Was there any part of the fix that involved one person vouching for\n    another's work?\n\n    This can include:\n      * signing off on a commit message\n      * mentioning a discussion with a colleague checking the work\n      * upvoting a solution on a pull request\n\n    Answer must be true or false.\n    Write a note about how you came to the conclusions you did, regardless of what your answer was.\n  answer:\n  note:\nstacktrace:\n  question: |\n    Are there any stacktraces in the bug reports?\n\n    Secondly, if there is a stacktrace, is the fix in the same file that the\n    stacktrace points to?\n\n    If there are no stacktraces, then both of these are false - but be sure to\n    mention where you checked in the note.\n\n    Answer must be true or false.\n    Write a note about how you came to the conclusions you did, regardless of\n    what your answer was.\n  any_stacktraces:\n  stacktrace_with_fix:\n  note:\nforgotten_check:\n  question: |\n    Does the fix for the vulnerability involve adding a forgotten check?\n\n    A \"forgotten check\" can mean many things. It often manifests as the fix\n    inserting an entire if-statement or a conditional to an existing\n    if-statement. Or a call to a method that checks something.\n\n    Example of checks can include:\n      * null pointer checks\n      * check the current role, e.g. root\n      * boundary checks for a number\n      * consult file permissions\n      * check a return value\n\n    Answer must be true or false.\n    Write a note about how you came to the conclusions you did, regardless of\n    what your answer was.\n  answer:\n  note:\norder_of_operations:\n  question: |\n    Does the fix for the vulnerability involve correcting an order of\n    operations?\n\n    This means the fix involves moving code around or changing the order of\n    how things are done.\n\n    Answer must be true or false.\n    Write a note about how you came to the conclusions you did, regardless of\n    what your answer was.\n  answer:\n  note:\nlessons:\n  question: |\n    Are there any common lessons we have learned from class that apply to this\n    vulnerability? In other words, could this vulnerability serve as an example\n    of one of those lessons?\n\n    Leave \"applies\" blank or put false if you did not see that lesson (you do\n    not need to put a reason). Put \"true\" if you feel the lesson applies and put\n    a quick explanation of how it applies.\n\n    Don't feel the need to claim that ALL of these apply, but it's pretty likely\n    that one or two of them apply.\n\n    If you think of another lesson we covered in class that applies here, feel\n    free to give it a small name and add one in the same format as these.\n  defense_in_depth:\n    applies:\n    note:\n  least_privilege:\n    applies:\n    note:\n  frameworks_are_optional:\n    applies:\n    note:\n  native_wrappers:\n    applies:\n    note:\n  distrust_input:\n    applies:\n    note:\n  security_by_obscurity:\n    applies:\n    note:\n  serial_killer:\n    applies:\n    note:\n  environment_variables:\n    applies:\n    note:\n  secure_by_default:\n    applies:\n    note:\n  yagni:\n    applies:\n    note:\n  complex_inputs:\n    applies:\n    note:\nmistakes:\n  question: |\n    In your opinion, after all of this research, what mistakes were made that\n    led to this vulnerability? Coding mistakes? Design mistakes?\n    Maintainability? Requirements? Miscommunications?\n\n    There can, and usually are, many mistakes behind a vulnerability.\n\n    Remember that mistakes can come in many forms:\n    * slip: failing to complete a properly planned step due to inattention\n              e.g. wrong key in the ignition\n              e.g. using < instead of <=\n    * lapse: failing to complete a properly planned step due to memory failure\n              e.g. forgetting to put car in reverse before backing up\n              e.g. forgetting to check null\n    * planning error: error that occurs when the plan is inadequate\n              e.g. getting stuck in traffic because you didn't consider the\n                   impact of the bridge closing\n              e.g. calling the wrong method\n              e.g. using a poor design\n\n    These are grey areas, of course. But do your best to analyze the mistakes\n    according to this framework.\n\n    Look at the CWE entry for this vulnerability and examine the mitigations\n    they have written there. Are they doing those? Does the fix look proper?\n\n    Write a thoughtful entry here that people in the software engineering\n    industry would find interesting.\n  answer:\nCWE_instructions: |\n  Please go to http://cwe.mitre.org and find the most specific, appropriate CWE\n  entry that describes your vulnerability. We recommend going to\n  https://cwe.mitre.org/data/definitions/699.html for the Software Development\n  view of the vulnerabilities. We also recommend the tool\n  http://www.cwevis.org/viz to help see how the classifications work.\n\n  If you have anything to note about why you classified it this way, write\n  something in CWE_note. This field is optional.\n\n  Just the number here is fine. No need for name or CWE prefix. If more than one\n  apply here, then place them in an array like this\n    CWE: [\"123\", \"456\"] # this is ok\n    CWE: [123, 456]     # also ok\n    CWE: 123            # also ok\nCWE:\nCWE_note:\nnickname_instructions: |\n  A catchy name for this vulnerability that would draw attention it.\n  If the report mentions a nickname, use that.\n  Must be under 30 characters. Optional.\nnickname:\nCVSS: CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H\n",
			"file": "CVE-2022-36879.yml",
			"file_size": 17034,
			"file_write_time": 133432039815483933,
			"settings":
			{
				"buffer_size": 16637,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					3,
					1,
					"left_delete",
					null,
					"AQAAAH4DAAAAAAAAfgMAAAAAAAABAAAAMA",
					"AQAAAAAAAAABAAAAfwMAAAAAAAB/AwAAAAAAAAAAAAAAAPC/"
				],
				[
					4,
					1,
					"insert",
					{
						"characters": "2"
					},
					"AQAAAH4DAAAAAAAAfwMAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAfgMAAAAAAAB+AwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"insert",
					{
						"characters": "Within"
					},
					"BgAAALkJAAAAAAAAugkAAAAAAAAAAAAAugkAAAAAAAC7CQAAAAAAAAAAAAC7CQAAAAAAALwJAAAAAAAAAAAAALwJAAAAAAAAvQkAAAAAAAAAAAAAvQkAAAAAAAC+CQAAAAAAAAAAAAC+CQAAAAAAAL8JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQkAAAAAAAC5CQAAAAAAAAAAAAAAAPC/"
				],
				[
					33,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAL8JAAAAAAAAwAkAAAAAAAAAAAAAwAkAAAAAAADBCQAAAAAAAAAAAADBCQAAAAAAAMIJAAAAAAAAAAAAAMIJAAAAAAAAwwkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAvwkAAAAAAAC/CQAAAAAAAAAAAAAAAPC/"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMMJAAAAAAAAxAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwkAAAAAAADDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					11,
					"left_delete",
					null,
					"CwAAAMMJAAAAAAAAwwkAAAAAAAABAAAAIMIJAAAAAAAAwgkAAAAAAAABAAAAZcEJAAAAAAAAwQkAAAAAAAABAAAAaMAJAAAAAAAAwAkAAAAAAAABAAAAdL8JAAAAAAAAvwkAAAAAAAABAAAAIL4JAAAAAAAAvgkAAAAAAAABAAAAbr0JAAAAAAAAvQkAAAAAAAABAAAAabwJAAAAAAAAvAkAAAAAAAABAAAAaLsJAAAAAAAAuwkAAAAAAAABAAAAdLoJAAAAAAAAugkAAAAAAAABAAAAabkJAAAAAAAAuQkAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAAxAkAAAAAAADECQAAAAAAAAAAAAAAAPC/"
				],
				[
					36,
					1,
					"insert",
					{
						"characters": " Within"
					},
					"BwAAALkJAAAAAAAAugkAAAAAAAAAAAAAugkAAAAAAAC7CQAAAAAAAAAAAAC7CQAAAAAAALwJAAAAAAAAAAAAALwJAAAAAAAAvQkAAAAAAAAAAAAAvQkAAAAAAAC+CQAAAAAAAAAAAAC+CQAAAAAAAL8JAAAAAAAAAAAAAL8JAAAAAAAAwAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAuQkAAAAAAAC5CQAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": " th"
					},
					"AwAAAMAJAAAAAAAAwQkAAAAAAAAAAAAAwQkAAAAAAADCCQAAAAAAAAAAAADCCQAAAAAAAMMJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAkAAAAAAADACQAAAAAAAAAAAAAAAPC/"
				],
				[
					38,
					1,
					"insert",
					{
						"characters": " e"
					},
					"AgAAAMMJAAAAAAAAxAkAAAAAAAAAAAAAxAkAAAAAAADFCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwkAAAAAAADDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					39,
					2,
					"left_delete",
					null,
					"AgAAAMQJAAAAAAAAxAkAAAAAAAABAAAAZcMJAAAAAAAAwwkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAAxQkAAAAAAADFCQAAAAAAAAAAAAAAAPC/"
				],
				[
					40,
					1,
					"insert",
					{
						"characters": "e"
					},
					"AQAAAMMJAAAAAAAAxAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwkAAAAAAADDCQAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": " li"
					},
					"AwAAAMQJAAAAAAAAxQkAAAAAAAAAAAAAxQkAAAAAAADGCQAAAAAAAAAAAADGCQAAAAAAAMcJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAkAAAAAAADECQAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": "nuz"
					},
					"AwAAAMcJAAAAAAAAyAkAAAAAAAAAAAAAyAkAAAAAAADJCQAAAAAAAAAAAADJCQAAAAAAAMoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwkAAAAAAADHCQAAAAAAAAAAAAAAAPC/"
				],
				[
					43,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoJAAAAAAAAywkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygkAAAAAAADKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					2,
					"left_delete",
					null,
					"AgAAAMoJAAAAAAAAygkAAAAAAAABAAAAIMkJAAAAAAAAyQkAAAAAAAABAAAAeg",
					"AQAAAAAAAAABAAAAywkAAAAAAADLCQAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "x"
					},
					"AQAAAMkJAAAAAAAAygkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAyQkAAAAAAADJCQAAAAAAAAAAAAAAAPC/"
				],
				[
					46,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMoJAAAAAAAAywkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygkAAAAAAADKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"insert_completion",
					{
						"completion": "kernel",
						"format": "text",
						"keep_prefix": false,
						"must_insert": true,
						"trigger": "kernel"
					},
					"AQAAAMsJAAAAAAAA0QkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAywkAAAAAAADLCQAAAAAAAAAAAAAAAPC/"
				],
				[
					48,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAANEJAAAAAAAA0wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QkAAAAAAADRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "version"
					},
					"BwAAAMUJAAAAAAAAxgkAAAAAAAAAAAAAxgkAAAAAAADHCQAAAAAAAAAAAADHCQAAAAAAAMgJAAAAAAAAAAAAAMgJAAAAAAAAyQkAAAAAAAAAAAAAyQkAAAAAAADKCQAAAAAAAAAAAADKCQAAAAAAAMsJAAAAAAAAAAAAAMsJAAAAAAAAzAkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxQkAAAAAAADFCQAAAAAAAAAAAAAAAPC/"
				],
				[
					52,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMwJAAAAAAAAzQkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAkAAAAAAADMCQAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "5.18"
					},
					"BAAAAM0JAAAAAAAAzgkAAAAAAAAAAAAAzgkAAAAAAADPCQAAAAAAAAAAAADPCQAAAAAAANAJAAAAAAAAAAAAANAJAAAAAAAA0QkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzQkAAAAAAADNCQAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"insert",
					{
						"characters": ".14"
					},
					"AwAAANEJAAAAAAAA0gkAAAAAAAAAAAAA0gkAAAAAAADTCQAAAAAAAAAAAADTCQAAAAAAANQJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QkAAAAAAADRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAANQJAAAAAAAA1QkAAAAAAAAAAAAA1QkAAAAAAADWCQAAAAAAAAAAAADWCQAAAAAAANcJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AkAAAAAAADUCQAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAANcJAAAAAAAA2AkAAAAAAAAAAAAA2AkAAAAAAADZCQAAAAAAAAAAAADZCQAAAAAAANoJAAAAAAAAAAAAANoJAAAAAAAA2wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1wkAAAAAAADXCQAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANsJAAAAAAAA3AkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2wkAAAAAAADbCQAAAAAAAAAAAAAAAPC/"
				],
				[
					69,
					8,
					"left_delete",
					null,
					"CAAAANIJAAAAAAAA0gkAAAAAAAAXAAAAMTQgb2YgdGhlIGxpbnV4IGtlcm5lbCDRCQAAAAAAANEJAAAAAAAAAQAAAC7QCQAAAAAAANAJAAAAAAAAAQAAADjPCQAAAAAAAM8JAAAAAAAAAQAAADHOCQAAAAAAAM4JAAAAAAAAAQAAAC7NCQAAAAAAAM0JAAAAAAAAAQAAADXMCQAAAAAAAMwJAAAAAAAAAQAAACDLCQAAAAAAAMsJAAAAAAAAAQAAAG4",
					"AQAAAAAAAAABAAAA6QkAAAAAAADSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					17,
					"left_delete",
					null,
					"EQAAAMoJAAAAAAAAygkAAAAAAAABAAAAb8kJAAAAAAAAyQkAAAAAAAABAAAAacgJAAAAAAAAyAkAAAAAAAABAAAAc8cJAAAAAAAAxwkAAAAAAAABAAAAcsYJAAAAAAAAxgkAAAAAAAABAAAAZcUJAAAAAAAAxQkAAAAAAAABAAAAdsQJAAAAAAAAxAkAAAAAAAABAAAAIMMJAAAAAAAAwwkAAAAAAAABAAAAZcIJAAAAAAAAwgkAAAAAAAABAAAAaMEJAAAAAAAAwQkAAAAAAAABAAAAdMAJAAAAAAAAwAkAAAAAAAABAAAAIL8JAAAAAAAAvwkAAAAAAAABAAAAbr4JAAAAAAAAvgkAAAAAAAABAAAAab0JAAAAAAAAvQkAAAAAAAABAAAAaLwJAAAAAAAAvAkAAAAAAAABAAAAdLsJAAAAAAAAuwkAAAAAAAABAAAAaboJAAAAAAAAugkAAAAAAAABAAAAVw",
					"AQAAAAAAAAABAAAAywkAAAAAAADLCQAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					1,
					"insert",
					{
						"characters": "Within"
					},
					"BgAAALoJAAAAAAAAuwkAAAAAAAAAAAAAuwkAAAAAAAC8CQAAAAAAAAAAAAC8CQAAAAAAAL0JAAAAAAAAAAAAAL0JAAAAAAAAvgkAAAAAAAAAAAAAvgkAAAAAAAC/CQAAAAAAAAAAAAC/CQAAAAAAAMAJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAugkAAAAAAAC6CQAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": " i"
					},
					"AgAAAMAJAAAAAAAAwQkAAAAAAAAAAAAAwQkAAAAAAADCCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwAkAAAAAAADACQAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAMEJAAAAAAAAwQkAAAAAAAABAAAAaQ",
					"AQAAAAAAAAABAAAAwgkAAAAAAADCCQAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "the"
					},
					"AwAAAMEJAAAAAAAAwgkAAAAAAAAAAAAAwgkAAAAAAADDCQAAAAAAAAAAAADDCQAAAAAAAMQJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwQkAAAAAAADBCQAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": " li"
					},
					"AwAAAMQJAAAAAAAAxQkAAAAAAAAAAAAAxQkAAAAAAADGCQAAAAAAAAAAAADGCQAAAAAAAMcJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxAkAAAAAAADECQAAAAAAAAAAAAAAAPC/"
				],
				[
					76,
					1,
					"insert",
					{
						"characters": "nux"
					},
					"AwAAAMcJAAAAAAAAyAkAAAAAAAAAAAAAyAkAAAAAAADJCQAAAAAAAAAAAADJCQAAAAAAAMoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAxwkAAAAAAADHCQAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": " k"
					},
					"AgAAAMoJAAAAAAAAywkAAAAAAAAAAAAAywkAAAAAAADMCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAygkAAAAAAADKCQAAAAAAAAAAAAAAAPC/"
				],
				[
					78,
					1,
					"insert",
					{
						"characters": "ernal"
					},
					"BQAAAMwJAAAAAAAAzQkAAAAAAAAAAAAAzQkAAAAAAADOCQAAAAAAAAAAAADOCQAAAAAAAM8JAAAAAAAAAAAAAM8JAAAAAAAA0AkAAAAAAAAAAAAA0AkAAAAAAADRCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAzAkAAAAAAADMCQAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANEJAAAAAAAA0gkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QkAAAAAAADRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					80,
					1,
					"left_delete",
					null,
					"AQAAANEJAAAAAAAA0QkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA0gkAAAAAAADSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": ","
					},
					"AQAAANEJAAAAAAAA0gkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0QkAAAAAAADRCQAAAAAAAAAAAAAAAPC/"
				],
				[
					82,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANIJAAAAAAAA0wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0gkAAAAAAADSCQAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "the"
					},
					"AwAAANMJAAAAAAAA1AkAAAAAAAAAAAAA1AkAAAAAAADVCQAAAAAAAAAAAADVCQAAAAAAANYJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wkAAAAAAADTCQAAAAAAAAAAAAAAAPC/"
				],
				[
					84,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANYJAAAAAAAA1wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1gkAAAAAAADWCQAAAAAAAAAAAAAAAPC/"
				],
				[
					85,
					4,
					"left_delete",
					null,
					"BAAAANYJAAAAAAAA1gkAAAAAAAABAAAAINUJAAAAAAAA1QkAAAAAAAABAAAAZdQJAAAAAAAA1AkAAAAAAAABAAAAaNMJAAAAAAAA0wkAAAAAAAABAAAAdA",
					"AQAAAAAAAAABAAAA1wkAAAAAAADXCQAAAAAAAAAAAAAAAPC/"
				],
				[
					86,
					1,
					"insert",
					{
						"characters": "A"
					},
					"AQAAANMJAAAAAAAA1AkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wkAAAAAAADTCQAAAAAAAAAAAAAAAPC/"
				],
				[
					87,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAANQJAAAAAAAA1QkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AkAAAAAAADUCQAAAAAAAAAAAAAAAPC/"
				],
				[
					88,
					2,
					"left_delete",
					null,
					"AgAAANQJAAAAAAAA1AkAAAAAAAABAAAAINMJAAAAAAAA0wkAAAAAAAABAAAAQQ",
					"AQAAAAAAAAABAAAA1QkAAAAAAADVCQAAAAAAAAAAAAAAAPC/"
				],
				[
					89,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAANMJAAAAAAAA1AkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA0wkAAAAAAADTCQAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"insert",
					{
						"characters": " vul"
					},
					"BAAAANQJAAAAAAAA1QkAAAAAAAAAAAAA1QkAAAAAAADWCQAAAAAAAAAAAADWCQAAAAAAANcJAAAAAAAAAAAAANcJAAAAAAAA2AkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA1AkAAAAAAADUCQAAAAAAAAAAAAAAAPC/"
				],
				[
					91,
					1,
					"insert_completion",
					{
						"completion": "vulnerability",
						"format": "text",
						"keep_prefix": false,
						"must_insert": false,
						"trigger": "vulnerability"
					},
					"AgAAANUJAAAAAAAA1QkAAAAAAAADAAAAdnVs1QkAAAAAAADiCQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA2AkAAAAAAADYCQAAAAAAAAAAAAAAAPC/"
				],
				[
					92,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAAOIJAAAAAAAA4wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gkAAAAAAADiCQAAAAAAAAAAAAAAAPC/"
				],
				[
					93,
					1,
					"insert",
					{
						"characters": " cau"
					},
					"BAAAAOMJAAAAAAAA5AkAAAAAAAAAAAAA5AkAAAAAAADlCQAAAAAAAAAAAADlCQAAAAAAAOYJAAAAAAAAAAAAAOYJAAAAAAAA5wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wkAAAAAAADjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					94,
					1,
					"insert",
					{
						"characters": "ses"
					},
					"AwAAAOcJAAAAAAAA6AkAAAAAAAAAAAAA6AkAAAAAAADpCQAAAAAAAAAAAADpCQAAAAAAAOoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA5wkAAAAAAADnCQAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOoJAAAAAAAA6wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gkAAAAAAADqCQAAAAAAAAAAAAAAAPC/"
				],
				[
					96,
					5,
					"left_delete",
					null,
					"BQAAAOoJAAAAAAAA6gkAAAAAAAABAAAAIOkJAAAAAAAA6QkAAAAAAAABAAAAc+gJAAAAAAAA6AkAAAAAAAABAAAAZecJAAAAAAAA5wkAAAAAAAABAAAAc+YJAAAAAAAA5gkAAAAAAAABAAAAdQ",
					"AQAAAAAAAAABAAAA6wkAAAAAAADrCQAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					3,
					"left_delete",
					null,
					"AwAAAOUJAAAAAAAA5QkAAAAAAAABAAAAYeQJAAAAAAAA5AkAAAAAAAABAAAAY+MJAAAAAAAA4wkAAAAAAAABAAAAIA",
					"AQAAAAAAAAABAAAA5gkAAAAAAADmCQAAAAAAAAAAAAAAAPC/"
				],
				[
					98,
					1,
					"insert",
					{
						"characters": "within"
					},
					"BgAAAOMJAAAAAAAA5AkAAAAAAAAAAAAA5AkAAAAAAADlCQAAAAAAAAAAAADlCQAAAAAAAOYJAAAAAAAAAAAAAOYJAAAAAAAA5wkAAAAAAAAAAAAA5wkAAAAAAADoCQAAAAAAAAAAAADoCQAAAAAAAOkJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wkAAAAAAADjCQAAAAAAAAAAAAAAAPC/"
				],
				[
					99,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOkJAAAAAAAA6gkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6QkAAAAAAADpCQAAAAAAAAAAAAAAAPC/"
				],
				[
					100,
					1,
					"insert",
					{
						"characters": "one"
					},
					"AwAAAOoJAAAAAAAA6wkAAAAAAAAAAAAA6wkAAAAAAADsCQAAAAAAAAAAAADsCQAAAAAAAO0JAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA6gkAAAAAAADqCQAAAAAAAAAAAAAAAPC/"
				],
				[
					101,
					1,
					"insert",
					{
						"characters": " of"
					},
					"AwAAAO0JAAAAAAAA7gkAAAAAAAAAAAAA7gkAAAAAAADvCQAAAAAAAAAAAADvCQAAAAAAAPAJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA7QkAAAAAAADtCQAAAAAAAAAAAAAAAPC/"
				],
				[
					102,
					1,
					"insert",
					{
						"characters": " the"
					},
					"BAAAAPAJAAAAAAAA8QkAAAAAAAAAAAAA8QkAAAAAAADyCQAAAAAAAAAAAADyCQAAAAAAAPMJAAAAAAAAAAAAAPMJAAAAAAAA9AkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA8AkAAAAAAADwCQAAAAAAAAAAAAAAAPC/"
				],
				[
					103,
					1,
					"insert",
					{
						"characters": " files"
					},
					"BgAAAPQJAAAAAAAA9QkAAAAAAAAAAAAA9QkAAAAAAAD2CQAAAAAAAAAAAAD2CQAAAAAAAPcJAAAAAAAAAAAAAPcJAAAAAAAA+AkAAAAAAAAAAAAA+AkAAAAAAAD5CQAAAAAAAAAAAAD5CQAAAAAAAPoJAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA9AkAAAAAAAD0CQAAAAAAAAAAAAAAAPC/"
				],
				[
					104,
					1,
					"insert",
					{
						"characters": "s"
					},
					"AQAAAPoJAAAAAAAA+wkAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gkAAAAAAAD6CQAAAAAAAAAAAAAAAPC/"
				],
				[
					105,
					1,
					"insert",
					{
						"characters": " a"
					},
					"AgAAAPsJAAAAAAAA/AkAAAAAAAAAAAAA/AkAAAAAAAD9CQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+wkAAAAAAAD7CQAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					3,
					"left_delete",
					null,
					"AwAAAPwJAAAAAAAA/AkAAAAAAAABAAAAYfsJAAAAAAAA+wkAAAAAAAABAAAAIPoJAAAAAAAA+gkAAAAAAAABAAAAcw",
					"AQAAAAAAAAABAAAA/QkAAAAAAAD9CQAAAAAAAAAAAAAAAPC/"
				],
				[
					107,
					1,
					"insert",
					{
						"characters": " allowed"
					},
					"CAAAAPoJAAAAAAAA+wkAAAAAAAAAAAAA+wkAAAAAAAD8CQAAAAAAAAAAAAD8CQAAAAAAAP0JAAAAAAAAAAAAAP0JAAAAAAAA/gkAAAAAAAAAAAAA/gkAAAAAAAD/CQAAAAAAAAAAAAD/CQAAAAAAAAAKAAAAAAAAAAAAAAAKAAAAAAAAAQoAAAAAAAAAAAAAAQoAAAAAAAACCgAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+gkAAAAAAAD6CQAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAAIKAAAAAAAAAwoAAAAAAAAAAAAAAwoAAAAAAAAECgAAAAAAAAAAAAAECgAAAAAAAAUKAAAAAAAAAAAAAAUKAAAAAAAABgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAgoAAAAAAAACCgAAAAAAAAAAAAAAAPC/"
				],
				[
					109,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAYKAAAAAAAABwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABgoAAAAAAAAGCgAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/kinki/SWEN331/vulnerabilities/cves/kernel/CVE-2006-5331.yml"
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "CVE-2022-36879.yml",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16637,
						"regions":
						{
						},
						"selection":
						[
							[
								2567,
								2567
							]
						],
						"settings":
						{
							"syntax": "Packages/YAML/YAML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 691.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "CVE-2022-36879.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
